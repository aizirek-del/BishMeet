// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardListLayoutBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView cardEvent;

  @NonNull
  public final ImageView cardsImageView;

  @NonNull
  public final TextView cardsTextTitle;

  @NonNull
  public final TextView cardsTv;

  @NonNull
  public final TextView cardsTvOnline;

  @NonNull
  public final TextView membersNum;

  @NonNull
  public final ShapeableImageView sFoto;

  @NonNull
  public final ShapeableImageView shapeableFoto;

  private CardListLayoutBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialCardView cardEvent, @NonNull ImageView cardsImageView,
      @NonNull TextView cardsTextTitle, @NonNull TextView cardsTv, @NonNull TextView cardsTvOnline,
      @NonNull TextView membersNum, @NonNull ShapeableImageView sFoto,
      @NonNull ShapeableImageView shapeableFoto) {
    this.rootView = rootView;
    this.cardEvent = cardEvent;
    this.cardsImageView = cardsImageView;
    this.cardsTextTitle = cardsTextTitle;
    this.cardsTv = cardsTv;
    this.cardsTvOnline = cardsTvOnline;
    this.membersNum = membersNum;
    this.sFoto = sFoto;
    this.shapeableFoto = shapeableFoto;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardListLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardListLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_list_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardListLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      MaterialCardView cardEvent = (MaterialCardView) rootView;

      id = R.id.cards_image_view;
      ImageView cardsImageView = ViewBindings.findChildViewById(rootView, id);
      if (cardsImageView == null) {
        break missingId;
      }

      id = R.id.cards_text_title;
      TextView cardsTextTitle = ViewBindings.findChildViewById(rootView, id);
      if (cardsTextTitle == null) {
        break missingId;
      }

      id = R.id.cards_tv;
      TextView cardsTv = ViewBindings.findChildViewById(rootView, id);
      if (cardsTv == null) {
        break missingId;
      }

      id = R.id.cards_tv_online;
      TextView cardsTvOnline = ViewBindings.findChildViewById(rootView, id);
      if (cardsTvOnline == null) {
        break missingId;
      }

      id = R.id.membersNum;
      TextView membersNum = ViewBindings.findChildViewById(rootView, id);
      if (membersNum == null) {
        break missingId;
      }

      id = R.id.sFoto;
      ShapeableImageView sFoto = ViewBindings.findChildViewById(rootView, id);
      if (sFoto == null) {
        break missingId;
      }

      id = R.id.shapeableFoto;
      ShapeableImageView shapeableFoto = ViewBindings.findChildViewById(rootView, id);
      if (shapeableFoto == null) {
        break missingId;
      }

      return new CardListLayoutBinding((MaterialCardView) rootView, cardEvent, cardsImageView,
          cardsTextTitle, cardsTv, cardsTvOnline, membersNum, sFoto, shapeableFoto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
